version: '2'
services:
  # API Services
  cart:
    image: glenndehaan/acme-merch-store-cart
    restart: unless-stopped
    networks:
      - web
      - backend
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-cart.rule=PathPrefix(`/api/cart`)"
      - "traefik.http.routers.microservice-cart.entrypoints=web"
      - "traefik.http.routers.microservice-cart.middlewares=microservice-cart-stripprefix,microservice-cart-ratelimit"
      - "traefik.http.middlewares.microservice-cart-stripprefix.stripprefix.prefixes=/api/cart"
      - "traefik.http.middlewares.microservice-cart-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.microservice-cart-ratelimit.ratelimit.burst=50"
      - "traefik.http.services.microservice-cart.loadbalancer.healthcheck.path=/_status"
      - "traefik.http.services.microservice-cart.loadbalancer.healthcheck.interval=30s"
  content:
    image: glenndehaan/acme-merch-store-content
    restart: unless-stopped
    networks:
      - web
    environment:
      GHOST_KEY: "${GHOST_KEY}"
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-content.rule=PathPrefix(`/api/content`)"
      - "traefik.http.routers.microservice-content.entrypoints=web"
      - "traefik.http.routers.microservice-content.middlewares=microservice-content-stripprefix,microservice-content-ratelimit"
      - "traefik.http.middlewares.microservice-content-stripprefix.stripprefix.prefixes=/api/content"
      - "traefik.http.middlewares.microservice-content-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.microservice-content-ratelimit.ratelimit.burst=50"
      - "traefik.http.services.microservice-content.loadbalancer.healthcheck.path=/_status"
      - "traefik.http.services.microservice-content.loadbalancer.healthcheck.interval=30s"
  product:
    image: glenndehaan/acme-merch-store-product
    restart: unless-stopped
    networks:
      - web
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-product.rule=PathPrefix(`/api/product`)"
      - "traefik.http.routers.microservice-product.entrypoints=web"
      - "traefik.http.routers.microservice-product.middlewares=microservice-product-stripprefix,microservice-product-ratelimit"
      - "traefik.http.middlewares.microservice-product-stripprefix.stripprefix.prefixes=/api/product"
      - "traefik.http.middlewares.microservice-product-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.microservice-product-ratelimit.ratelimit.burst=50"
      - "traefik.http.services.microservice-product.loadbalancer.healthcheck.path=/_status"
      - "traefik.http.services.microservice-product.loadbalancer.healthcheck.interval=30s"
  search:
    image: glenndehaan/acme-merch-store-search
    restart: unless-stopped
    networks:
      - web
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-search.rule=PathPrefix(`/api/search`)"
      - "traefik.http.routers.microservice-search.entrypoints=web"
      - "traefik.http.routers.microservice-search.middlewares=microservice-search-stripprefix,microservice-search-ratelimit"
      - "traefik.http.middlewares.microservice-search-stripprefix.stripprefix.prefixes=/api/search"
      - "traefik.http.middlewares.microservice-search-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.microservice-search-ratelimit.ratelimit.burst=50"
      - "traefik.http.services.microservice-search.loadbalancer.healthcheck.path=/_status"
      - "traefik.http.services.microservice-search.loadbalancer.healthcheck.interval=30s"
  stock:
    image: glenndehaan/acme-merch-store-stock
    restart: unless-stopped
    networks:
      - web
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-stock.rule=PathPrefix(`/api/stock`)"
      - "traefik.http.routers.microservice-stock.entrypoints=web"
      - "traefik.http.routers.microservice-stock.middlewares=microservice-stock-stripprefix,microservice-stock-ratelimit"
      - "traefik.http.middlewares.microservice-stock-stripprefix.stripprefix.prefixes=/api/stock"
      - "traefik.http.middlewares.microservice-stock-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.microservice-stock-ratelimit.ratelimit.burst=50"
      - "traefik.http.services.microservice-stock.loadbalancer.healthcheck.path=/_status"
      - "traefik.http.services.microservice-stock.loadbalancer.healthcheck.interval=30s"
  user:
    image: glenndehaan/acme-merch-store-user
    restart: unless-stopped
    networks:
      - web
      - backend
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-user.rule=PathPrefix(`/api/user`)"
      - "traefik.http.routers.microservice-user.entrypoints=web"
      - "traefik.http.routers.microservice-user.middlewares=microservice-user-stripprefix,microservice-user-ratelimit"
      - "traefik.http.middlewares.microservice-user-stripprefix.stripprefix.prefixes=/api/user"
      - "traefik.http.middlewares.microservice-user-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.microservice-user-ratelimit.ratelimit.burst=50"
      - "traefik.http.services.microservice-user.loadbalancer.healthcheck.path=/_status"
      - "traefik.http.services.microservice-user.loadbalancer.healthcheck.interval=30s"
  wishlist:
    image: glenndehaan/acme-merch-store-wishlist
    restart: unless-stopped
    networks:
      - web
      - backend
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-wishlist.rule=PathPrefix(`/api/wishlist`)"
      - "traefik.http.routers.microservice-wishlist.entrypoints=web"
      - "traefik.http.routers.microservice-wishlist.middlewares=microservice-wishlist-stripprefix,microservice-wishlist-ratelimit"
      - "traefik.http.middlewares.microservice-wishlist-stripprefix.stripprefix.prefixes=/api/wishlist"
      - "traefik.http.middlewares.microservice-wishlist-ratelimit.ratelimit.average=100"
      - "traefik.http.middlewares.microservice-wishlist-ratelimit.ratelimit.burst=50"
      - "traefik.http.services.microservice-wishlist.loadbalancer.healthcheck.path=/_status"
      - "traefik.http.services.microservice-wishlist.loadbalancer.healthcheck.interval=30s"
  # App Storage
  storage:
    image: glenndehaan/acme-merch-store-storage
    restart: unless-stopped
    depends_on:
      - "redis"
    networks:
      - backend
      - db
  # App Redis Database
  redis:
    image: redis
    command: bash -c "redis-server --appendonly yes"
    restart: unless-stopped
    volumes:
      - './redis:/data'
    networks:
      - db
  # App Assets
  assets:
    image: glenndehaan/acme-merch-store-assets
    restart: unless-stopped
    networks:
      - web
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-assets.rule=PathPrefix(`/assets`)"
      - "traefik.http.routers.microservice-assets.entrypoints=web"
      - "traefik.http.routers.microservice-assets.middlewares=microservice-assets-stripprefix,microservice-assets-compress"
      - "traefik.http.middlewares.microservice-assets-stripprefix.stripprefix.prefixes=/assets"
      - "traefik.http.middlewares.microservice-assets-compress.compress=true"
  # App CMS
  cms:
    image: ghost:alpine
    restart: unless-stopped
    networks:
      - web
    volumes:
      - './cms:/var/lib/ghost/content'
    environment:
      url: http://localhost/cms
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-cms.rule=PathPrefix(`/cms`)"
      - "traefik.http.routers.microservice-cms.entrypoints=web"
      - "traefik.http.routers.microservice-cms.middlewares=microservice-cms-redirectregex,microservice-cms-compress"
      - "traefik.http.middlewares.microservice-cms-redirectregex.redirectregex.regex=^https?://.*/cms/?$$"
      - "traefik.http.middlewares.microservice-cms-redirectregex.redirectregex.replacement=/cms/ghost/"
      - "traefik.http.middlewares.microservice-cms-redirectregex.redirectregex.permanent=true"
      - "traefik.http.middlewares.microservice-cms-compress.compress=true"
  # App Web UI
  web:
    image: glenndehaan/acme-merch-store-web
    restart: unless-stopped
    networks:
      - web
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.microservice-web.rule=PathPrefix(`/`)"
      - "traefik.http.routers.microservice-web.entrypoints=web"
      - "traefik.http.routers.microservice-web.middlewares=microservice-web-compress"
      - "traefik.http.middlewares.microservice-web-compress.compress=true"
      - "traefik.http.services.microservice-web.loadbalancer.healthcheck.path=/"
      - "traefik.http.services.microservice-web.loadbalancer.healthcheck.interval=30s"
  traefik:
    image: traefik:v2.5
    restart: unless-stopped
    ports:
      - "9090:80" # <== http
      - "8080:8080" # <== dashboard
    command:
      ###
      ### https://doc.traefik.io/traefik/reference/static-configuration/cli/
      ###
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=true
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      - --log.level=INFO
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=web
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      - --entrypoints.web.address=:80
      ## Traefik Pilot
      - --pilot.dashboard=false
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true"
      - "traefik.http.routers.api.service=api@internal"
networks:
  web:
    external: true
  backend:
    external: false
  db:
    external: false
